# only keep the following default bindings
unbind -a

bind-key           C customize-mode -Z
bind-key         C-o rotate-window
bind-key         C-z suspend-client
bind-key       Space next-layout
bind-key           ! break-pane
bind-key           '#' list-buffers
bind-key           '$' command-prompt -I '#S' "rename-session '%%'"
bind-key           & confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key           "'" command-prompt -p index "select-window -t ':%%'"
bind-key           ( switch-client -p
bind-key           ) switch-client -n
bind-key           , command-prompt -I '#W' "rename-window '%%'"
bind-key           - delete-buffer
bind-key           . command-prompt -T target "move-window -t '%%'"
bind-key           0 select-window -t :=0
bind-key           1 select-window -t :=1
bind-key           2 select-window -t :=2
bind-key           3 select-window -t :=3
bind-key           4 select-window -t :=4
bind-key           5 select-window -t :=5
bind-key           6 select-window -t :=6
bind-key           7 select-window -t :=7
bind-key           8 select-window -t :=8
bind-key           9 select-window -t :=9
bind-key           : command-prompt
bind-key           \; command-prompt
bind-key           = choose-buffer -Z
bind-key           ? list-keys -aN
bind-key           / command-prompt -k -p key { list-keys -1N "%%" }
bind-key           D choose-client
bind-key           L switch-client -l
bind-key           [ copy-mode
bind-key           ] paste-buffer -p
bind-key           d detach-client
bind-key           f command-prompt "find-window -Z '%%'"
bind-key           i display-message
bind-key           n next-window
bind-key           o last-window
bind-key           p previous-window
bind-key           q display-panes
bind-key           r refresh-client
bind-key           t clock-mode
bind-key           x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key           z resize-pane -Z
bind-key           '~' show-messages
bind-key         M-1 select-layout even-horizontal
bind-key         M-2 select-layout even-vertical
bind-key         M-3 select-layout main-horizontal
bind-key         M-4 select-layout main-vertical
bind-key         M-5 select-layout tiled
bind-key         M-n next-window -a
bind-key         M-o rotate-window -D
bind-key         M-p previous-window -a

# custom settings
set -g prefix C-]
unbind C-b
bind C-] send-prefix

bind -n F5 source-file ${HOME}/.tmux.conf \; display-message "~/.tmux.conf loaded"

if-shell 'test "$(uname)" = "Darwin"' 'set -g default-command "which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l"'
if-shell 'test "$(uname)" = "Darwin"' 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace pbcopy"'
if-shell 'test "$(uname)" = "Linux"' 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "which xsel >/dev/null && xsel -i -b"'

set -g detach-on-destroy off
set -g default-terminal "screen-256color"
set -g history-limit 100000

set -s escape-time 0
setw -g display-panes-time 3000

set -g visual-activity on
setw -g monitor-activity on

#set -g status-style fg=white,bg=black
set -g status-style fg=white,bg="#222222"
set -g status-left '#[fg=red][#{session_name}]'
set -g status-right "#[fg=yellow]#(uptime | rev | cut -d : -f1 | rev) | %d-%b-%y %H:%M"
set -g status-left-length 1000
set -g status-right-length 1000

setw -g window-status-current-style fg=black,bg=yellow
set -g pane-active-border-style fg=green,bg=green

setw -g mode-keys vi
setw -g automatic-rename on
setw -g aggressive-resize on

bind -n F6 set -g mouse off \; display-message "mouse disabled"
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n MouseDown1Status select-window -t=
bind -n MouseDown1Pane select-pane -t=
bind -n MouseDrag1Border resize-pane -M

bind -n M-NPage copy-mode \; send-keys NPage
bind -n M-PPage copy-mode -u
bind -n M-/ copy-mode \; send-keys ?
bind -n M-? copy-mode \; send-keys /
bind -n M-u copy-mode \; send-keys C-u
bind b choose-buffer -Z

bind s command-prompt "new-session -s '%1'"
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

bind o last-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind M select-pane -M
bind m select-pane -m

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind-key w choose-tree -Zw -O name
bind -n M-n next-window
bind -n M-o rotate-window
bind -n M-p previous-window

bind -n M-s choose-tree -Zs -O name
bind -n M-N switch-client -n
bind -n M-P switch-client -p

bind -n S-F3 swap-pane -U
bind -n S-F4 swap-pane -D

bind -n F3 swap-window -t -1 \; previous-window
bind -n F4 swap-window -t +1 \; next-window

bind -nr C-Left resize-pane -L
bind -nr C-Right resize-pane -R
bind -nr C-Up resize-pane -U
bind -nr C-Down resize-pane -D

bind -nr M-Left resize-pane -L 5
bind -nr M-Right resize-pane -R 5
bind -nr M-Up resize-pane -U 5
bind -nr M-Down resize-pane -D 5

bind -n F8 command-prompt -p 'pull in session:window.pane:' "join-pane -h -s '%%'"
bind -n S-F8 command-prompt -p 'pull in session:window.pane:' "join-pane -s '%%'"
bind -n F9 command-prompt -p 'join session:window.pane:' "join-pane -h -t '%%'"
bind -n S-F9 command-prompt -p 'join session:window.pane:' "join-pane -t '%%'"
